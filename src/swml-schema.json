{
    "$schema": "https://json-schema.org/draft-07/schema#",
    "$id": "https://raw.githubusercontent.com/signalwire/swml-editor/main/src/swml-schema.json",
    "title": "SWML",
    "description": "SWML is a scripting language-as-data for SignalWire products.\n## Document fetching\nIf an incoming call uses SWML as its call handler, SignalWire will send\na POST method to the specified webhook with a JSON body containing\ncustomer-defined script variables and the current call object:\n```json\n{\n  \"call\": {\n    \"project_id\": \"project uuid\",\n    \"space_id\": \"space_uuid\",\n    \"call_id\": \"uuid\",\n    \"state\": \"created\",\n    \"type\": \"sip\",\n    \"from\": \"sip:+15551231234@example.com\",\n    \"to\": \"sip:+15553214321@example.com\",\n    \"headers\": [\n      { \"name\": \"X-Header-1\", \"value\": \"X-Header-1-Value\" },\n      { \"name\": \"X-Header-2\", \"value\": \"X-Header-2-Value\" }\n    ]\n  },\n  \"vars\": {\n    \"customer_script_var_1\": \"customer_script_var_1_value\",\n    \"customer_script_var_2\": \"customer_script_var_2_value\"\n  },\n  \"params\": {\n    \"param_1\": \"param_1_value\",\n    \"param_2\": \"param_2_value\"\n  }\n}\n```\nThe server MUST reply with a valid SWML script, using either the  `application/json`, `application/yaml`, or `text/x-yaml` content-type.\n## Versioning\nAt the top level of a script will be a `version` field that is a string containing a semantic version for the document schema. Suggested use is MAJOR version reflects breaking changes where a script may not operate correctly without changes such as existing methods having new required parameters or renaming and refactoring.  The MINOR version can be used as new methods are introduced or new optional fields for existing methods, and PATCH version can be used to reflect only the most minor bug fixes which still have some impact on the schema.\n## Document Execution\nThe document contains a `sections` field that is a mapping of named sections for execution. The `main` section is always executed first. There must always be a `main` section in the document. The `transfer` method is used to jump to sections in the document or to a new URL.\nEach section is an Array of strings or objects. Strings can be used for methods that do not require parameters like `answer`, `hangup`, or `denoise`. Use objects to execute methods with parameters. Each string or object in the section's array is executed in order until the section is completed. If there are no more methods to execute, the call ends.\n## Expression Evaluation with JavaScript\nAll text wrapped in `%{}` is evaluated as JavaScript or as a plain variable substitution.\n### Variables and call parameters\nAll variables and call parameters are delivered in the POST body to the URL in `transfer` and `execute`. Use the `set` and `unset` methods to set or delete variables.\nVariables are only set or unset as a side effect of SWML methods executed by the script. All variables can be referenced inside `%{}` JavaScript expressions using the `vars.` JavaScript object.\nVariables can not be permanently changed inside JavaScript expressions. Use the `set` method to do that.\nAll Call object parameters may be referenced inside JavaScript expressions. For example `%{call.from}` or `%{call.headers['X-Customer-ID']}`. Call object parameters are read only.",
    "type": "object",
    "required": [
      "sections"
    ],
    "properties": {
      "version": {
        "type": "string",
        "enum": [
          "1.0.0"
        ]
      },
      "sections": {
        "title": "Sections",
        "description": "Functions available for scripting. The name `main` is used a  the default entrypoint. Functions defined in a `sections` share a common context (set of variables).",
        "type": "object",
        "required": [
          "main"
        ],
        "additionalProperties": false,
        "properties": {
          ":l": {
            "type": "integer",
            "description": "line number in the source code"
          },
          ":c": {
            "type": "integer",
            "description": "column number in the source code"
          },
          ":i": {
            "type": "integer",
            "description": "index number in the source code"
          }
        },
        "patternProperties": {
          "^[^:]": {
            "description": "A function available for scripting.",
            "$ref": "#/$defs/function"
          }
        }
      }
    },
    "$defs": {
      "volume": {
        "title": "Audio volume",
        "type": "number",
        "minimum": -40,
        "maximum": 40,
        "default": 0
      },
      "connect_sip_headers": {
        "title": "Connect SIP headers",
        "type": "array",
        "description": "SIP headers to add to INVITE. Has no effect on calls to phone numbers.",
        "items": {
          "type": "object",
          "required": [
            "name",
            "value"
          ],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 256,
              "pattern": "^X-[-.!%*_+`\\\\~a-zA-Z0-9]{0,254}$"
            },
            "value": {
              "type": "string"
            }
          }
        }
      },
      "connect_device_object": {
        "title": "Connect device (as an object)",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "to"
        ],
        "properties": {
          "to": {
            "type": "string",
            "description": "SIP URI or phone number"
          },
          "from": {
            "type": "string",
            "description": "Caller ID number"
          },
          "headers": {
            "$ref": "#/$defs/connect_sip_headers"
          },
          "codecs": {
            "$ref": "#/$defs/sip_codec_list",
            "description": "Comma-separated string of codecs to offer. Has no effect on calls to phone numbers."
          },
          "webrtc_media": {
            "type": "boolean",
            "description": "If true, WebRTC media is offered to the SIP endpoint. Has no effect on calls to phone numbers."
          },
          "fsvars": {
            "title": "fsvars",
            "type": "object"
          },
          "timeout": {
            "title": "timeout",
            "type": "number",
            "minimum": 0
          },
          "session_timeout": {
            "type": "integer",
            "minimum": 0,
            "description": "If >0, SIP Session-Expires header in INVITE is set to this value. Has no effect on calls to phone numbers."
          },
          "call_state_url": {
            "title": "call_state_url",
            "description": "webhook url (http(s)) to which send call state change notifications",
            "type": "string"
          },
          "call_state_events": {
            "title": "call_state_events",
            "description": "an array of call state event names to be notified about. Allowed event names: `created`, `ringing`, `answered`, `ended`. Defaults to `[\"ended\"]`",
            "type": "array",
            "default": [
              "ended"
            ],
            "items": {
              "type": "string",
              "enum": [
                "created",
                "ringing",
                "answered",
                "ended"
              ]
            }
          }
        }
      },
      "connect_device": {
        "title": "Connect device",
        "oneOf": [
          {
            "type": "string",
            "description": "SIP URI or phone number"
          },
          {
            "$ref": "#/$defs/connect_device_object"
          }
        ]
      },
      "sip_codec_list": {
        "title": "Supported SIP codecs",
        "description": "A comma-separated list of SIP codecs",
        "type": "string",
        "pattern": "^(PCMU|PCMA|OPUS|G722|G729|VP8|H264)(,(PCMU|PCMA|OPUS|G722|G729|VP8|H264))*$"
      },
      "meta": {
        "title": "metadata",
        "description": "Metadata provided by the customer. Not used by SignalWire.",
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "function": {
        "title": "section / function",
        "oneOf": [
          {
            "description": "A function that takes no parameter and which return value is ignored. This is a shortcut for `{ code: […code…] }`.",
            "$ref": "#/$defs/block"
          },
          {
            "description": "A regular function",
            "type": "object",
            "required": [
              "code"
            ],
            "additionalProperties": false,
            "properties": {
              "params": {
                "title": "Parameters schema",
                "description": "Parameters accepted by this function.",
                "type": "object",
                "patternProperties": {
                  "^[a-zA-Z0-9_$]+$": {
                    "description": "Each named parameter must be a valid JSON datatypem specified by the application.",
                    "$ref": "https://json-schema.org/draft-07/schema#"
                  }
                }
              },
              "result": {
                "title": "Result",
                "description": "Result returned by this function. The result must be a valid datatype specified by the application.",
                "$ref": "https://json-schema.org/draft-07/schema#"
              },
              "code": {
                "title": "Code",
                "description": "The body of the function",
                "$ref": "#/$defs/block"
              },
              "meta": {
                "$ref": "#/$defs/meta"
              }
            }
          }
        ]
      },
      "block": {
        "title": "Block",
        "description": "A list of statements, meant to be executed in sequential order.",
        "oneOf": [
          {
            "description": "type of block",
            "$ref": "#/$defs/statement"
          },
          {
            "description": "type of block",
            "type": "array",
            "items": {
              "$ref": "#/$defs/statement"
            }
          }
        ]
      },
      "target": {
        "title": "Target",
        "oneOf": [
          {
            "description": "section in document to jump to",
            "type": "string",
            "pattern": "^[a-zA-Z_$-][a-zA-Z0-9_$-]*$"
          },
          {
            "description": "relay context to notify (NOT IMPLEMENTED)",
            "type": "string",
            "pattern": "^relay:"
          },
          {
            "description": "URL to fetch next document from. Sends HTTP POST",
            "type": "string",
            "pattern": "^https://"
          },
          {
            "description": "section in document to jump to",
            "type": "string",
            "pattern": "^[$%][{].*[}]$"
          }
        ]
      },
      "expression": {
        "title": "Expression",
        "description": "String with embedded `%{}` blocks containing JavaScript expressions.",
        "type": "string"
      },
      "play": {
        "title": "Play list",
        "oneOf": [
          {
            "$ref": "#/$defs/playItem"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/$defs/playItem"
            }
          }
        ]
      },
      "playItem": {
        "title": "Play item",
        "anyOf": [
          {
            "description": "audio file to GET",
            "type": "string",
            "pattern": "^https?://"
          },
          {
            "description": "ring tone to play. For example: `ring:us` to play single ring or `ring:20.0:us` to play ring for 20 seconds.",
            "type": "string",
            "pattern": "^ring:(\\d+(\\.\\d*)?:)?(at|au|be|bg|br|ca|ch|cl|cn|cy|cz|de|dk|dz|ee|eg|es|fi|fr|gr|hu|il|in|it|jp|ko|lt|mx|my|nl|no|nz|ph|pk|pl|pt|ro|rs|ru|sa|se|sg|th|tr|tw|uk|us|ve|za|bong)$"
          },
          {
            "description": "Sentence to say",
            "type": "string",
            "pattern": "^say:"
          },
          {
            "description": "Seconds of silence to play",
            "type": "string",
            "pattern": "^silence:\\d+(\\.\\d*)?$"
          },
          {
            "type": "string"
          }
        ]
      },
      "speech_language": {
        "title": "Speech language",
        "description": "Used notably for Text To Speech (TTS) conversion.",
        "type": "string",
        "enum": [
          "af-ZA",
          "am-ET",
          "ar-AE",
          "ar-AR",
          "ar-BH",
          "ar-DZ",
          "ar-EG",
          "ar-IL",
          "ar-IQ",
          "ar-JO",
          "ar-KW",
          "ar-LB",
          "ar-MA",
          "ar-OM",
          "ar-PS",
          "ar-QA",
          "ar-SA",
          "ar-TN",
          "az-AZ",
          "bg-BG",
          "bn-BD",
          "bn-IN",
          "ca-ES",
          "cs-CZ",
          "da-DK",
          "de-DE",
          "el-GR",
          "en-AU",
          "en-CA",
          "en-GB",
          "en-GH",
          "en-IE",
          "en-IN",
          "en-KE",
          "en-NG",
          "en-NZ",
          "en-PH",
          "en-SG",
          "en-TZ",
          "en-US",
          "en-ZA",
          "es-AR",
          "es-BO",
          "es-CL",
          "es-CO",
          "es-CR",
          "es-DO",
          "es-EC",
          "es-ES",
          "es-GT",
          "es-HN",
          "es-MX",
          "es-NI",
          "es-PA",
          "es-PE",
          "es-PR",
          "es-PY",
          "es-SV",
          "es-US",
          "es-UY",
          "es-VE",
          "eu-ES",
          "fa-IR",
          "fi-FI",
          "fil-PH",
          "fr-CA",
          "fr-FR",
          "gl-ES",
          "gu-IN",
          "he-IL",
          "hi-IN",
          "hr-HR",
          "hu-HU",
          "hy-AM",
          "id-ID",
          "is-IS",
          "it-IT",
          "ja-JP",
          "jv-ID",
          "ka-GE",
          "km-KH",
          "kn-IN",
          "ko-KR",
          "lo-LA",
          "lt-LT",
          "lv-LV",
          "ml-IN",
          "mr-IN",
          "ms-MY",
          "nb-NO",
          "ne-NP",
          "nl-NL",
          "pl-PL",
          "pt-BR",
          "pt-PT",
          "ro-RO",
          "ru-RU",
          "si-LK",
          "sk-SK",
          "sl-SI",
          "sr-RS",
          "su-ID",
          "sv-SE",
          "sw-KE",
          "sw-TZ",
          "ta-IN",
          "ta-LK",
          "ta-MY",
          "ta-SG",
          "te-IN",
          "th-TH",
          "tr-TR",
          "uk-UA",
          "ur-IN",
          "ur-PK",
          "vi-VN",
          "yue-Hant-HK",
          "zh",
          "zh-CN",
          "zh-HK",
          "zh-TW",
          "zu-ZA"
        ]
      },
      "dtmf_digits": {
        "title": "DTMF digits",
        "description": "A string of \"digits\" (including the star `*` and octothorpe `#`) that may be generated as audio tones during a call.",
        "type": "string",
        "pattern": "^[0-9A-Da-d*#]+$"
      },
      "sendable_dtmf_digits": {
        "title": "Sendable DTMF digits",
        "description": "A string of \"digits\" (including the star `*` and octothorpe `#`) that may be generated as audio tones during a call. Use `w` and `W` for pauses.",
        "type": "string",
        "pattern": "^[0-9*#A-Da-dWw]+$"
      },
      "ai_system": {
        "title": "AI parameters",
        "description": "Available parameters for the `ai` command.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "text": {
            "title": "Text",
            "type": "string",
            "description": "The instructions to send to the agent. Optional. Default is not set."
          },
          "frequency_penalty": {
            "title": "Frequency Penalty",
            "type": "number",
            "minimum": -2,
            "maximum": 2,
            "description": "Aversion to repeating lines. Float value between -2.0 and 2.0. Positive values decrease the model's likelihood to repeat the same line verbatim. Optional. Default is 0."
          },
          "presence_penalty": {
            "title": "Presence Penalty",
            "type": "number",
            "minimum": -2,
            "maximum": 2,
            "description": "Aversion to staying on topic. Float value between -2.0 and 2.0. Positive values increase the model's likelihood to talk about new topics. Optional. Default is 0."
          },
          "temperature": {
            "title": "Temperature",
            "type": "number",
            "minimum": 0,
            "maximum": 2,
            "description": "Randomness setting. Float value between 0.0 and 2.0. Closer to 0 will make the output less random. Optional. Default is 1.0."
          },
          "top_p": {
            "title": "Top P",
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "default": 1,
            "description": "Randomness setting. Alternative to temperature. Float value between 0.0 and 1.0. Closer to 0 will make the output less random. Optional. Default is 1.0."
          },
          "confidence": {
            "title": "Confidence",
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "default": 0.6,
            "description": "Threshold to fire a speech-detect event at the end of the utterance. Float value between 0.0 and 1.0. Decreasing this value will reduce the pause after the user speaks, but may introduce false positives. Optional. Default is 0.6."
          },
          "result": {
            "title": "result",
            "description": "Set up a switch on return_value by using an object or a cond statement by using an array.",
            "$ref": "#/$defs/block"
          }
        }
      },
      "swaig_functions": {
        "title": "SWAIG function",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "defaults": {
            "title": "Default settings",
            "$ref": "#/$defs/ai_default_settings"
          },
          "native_functions": {
            "title": "Prebuilt functions",
            "description": "Prebuilt functions the AI agent is able to call.",
            "$ref": "#/$defs/ai_native_functions"
          },
          "functions": {
            "title": "array of functions",
            "description": "An array of JSON objects to define functions that can be executed during the interaction with the AI. Optional. Default is not set. The fields of this object are the six following.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/ai_function_item"
            }
          },
          "includes": {
            "title": "array of includes",
            "description": "An array of objects to include remote function signatures. The object fields are url to specify where the remote functions are defined and functions which is an array of the function names as strings.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/ai_include_item"
            }
          }
        }
      },
      "ai_default_settings": {
        "title": "Default Function",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "web_hook_url": {
            "description": "Default settings for all SWAIG functions. If defaults is not set, settings may be set in each function object. Optional. Default is not set.",
            "type": "string"
          },
          "web_hook_auth_user": {
            "description": "Default auth username for web_hook_url endpoint. Optional. Default is not set",
            "type": "string"
          },
          "web_hook_auth_password": {
            "description": "Default auth password for web_hook_url endpoint. Optional. Default is not set.",
            "type": "string"
          }
        }
      },
      "ai_native_functions": {
        "title": "Prebuilt function",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "ai_function_item": {
        "title": "A single function item",
        "type": "object",
        "required": [
          "function",
          "purpose"
        ],
        "properties": {
          "active": {
            "description": "Whether the function is active. optional. Default is true",
            "type": "boolean"
          },
          "function": {
            "description": "A unique name for the function. for example \"get_weather\". Required",
            "type": "string"
          },
          "meta_data": {
            "description": "A JSON object containing any metadata, as a key-value map. Optional Default is not set",
            "type": "object"
          },
          "meta_data_token": {
            "description": "Scoping token for meta_data. If not supplied, metadata will be scoped to function's \"web_hook_url\". Optional. Default is set by SignalWire",
            "type": "string"
          },
          "data_map": {
            "title": "An object containing properties to process or validate the input, perform actions based on the input, or connect to external APIs or services in a serverless fashion.",
            "oneOf": [
              {
                "type": "object",
                "$ref": "#/$defs/ai_data_map_item"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/$defs/ai_data_map_item"
                }
              }
            ]
          },
          "web_hook_url": {
            "description": "Function-specific URL to send status callbacks and reports to. Takes precedence over a default setting. Optional. Default is not set.",
            "type": "string"
          },
          "web_hook_auth_user": {
            "description": "Function-specific auth username for web_hook_url endpoint. Takes precedence over a default setting. Optional. Default is not set.",
            "type": "string"
          },
          "web_hook_auth_pass": {
            "description": "Function-specific auth password for web_hook_url endpoint. Takes precedence over a default setting. Optional. Default is not set.",
            "type": "string"
          },
          "purpose": {
            "description": "A description of the context and purpose of the function, to explain to the agent when to use it. Required.",
            "type": "string"
          },
          "argument": {
            "description": "A JSON object defining the input that should be passed to the function. The fields of this object are the following two parameters. Required.",
            "type": "object",
            "required": [
              "type",
              "properties"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "A JSON object defining the input that should be passed to the function. The fields of this object are the following two parameters. Required.",
                "enum": [
                  "object",
                  "string"
                ]
              },
              "properties": {
                "type": "object",
                "description": "A JSON object describing the argument. The value is set by the user. For example, \"location\" for a location-based search or \"company\" if searching a database of companies. This object has sub-parameters description and type to help define the property.",
                "patternProperties": {
                  "^[^:]": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "object",
                          "string"
                        ]
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ai_data_map_item": {
        "title": "A single data_map item",
        "type": "object",
        "properties": {
          "expression": {
            "description": "An array of objects that define patterns and corresponding actions.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/ai_data_map_expression_item"
            }
          }
        }
      },
      "ai_data_map_expression_item": {
        "title": "A single expression item",
        "type": "object",
        "properties": {
          "string": {
            "description": "The actual input or value from the user or system.",
            "type": "string"
          },
          "pattern": {
            "description": "A regular expression pattern to validate or match the string.",
            "type": "string"
          },
          "output": {
            "description": "Defines the response or action to be taken when the pattern matches.",
            "type": "object",
            "properties": {
              "response": {
                "description": "A static response text or message.",
                "type": "string"
              },
              "action": {
                "description": "A list of actions to be performed upon matching.",
                "type": "array",
                "items": {
                  "$ref": "#/$defs/ai_data_map_action_item"
                }
              }
            }
          }
        }
      },
      "ai_data_map_action_item": {
        "title": "Single item for action array",
        "type": "object",
        "properties": {
          "SWML": {
            "description": "A SWML object to be executed.",
            "type": "object"
          },
          "say": {
            "description": "A message to be spoken by the AI agent.",
            "type": "string"
          },
          "stop": {
            "description": "Whether to stop the conversation",
            "type": "boolean"
          },
          "toggle_functions": {
            "description": "Whether to toggle the functions on or off.",
            "type": "array",
            "items": {
              "properties": {
                "active": {
                  "description": "Whether to activate or deactivate the functions. Default is true",
                  "type": "boolean"
                },
                "function": {
                  "description": "A list of functions to toggle",
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "back_to_back_functions": {
            "description": "Whether to execute functions back to back. Default is false",
            "type": "boolean"
          },
          "set_meta_data": {
            "description": "A JSON object containing any metadata, as a key-value map.",
            "type": "object"
          },
          "playback_bg": {
            "description": "A JSON object containing the audio file to play.",
            "type": "object",
            "properties": {
              "file": {
                "description": "URL or filepath of the audio file to play.",
                "type": "string"
              },
              "wait": {
                "description": "Whether to wait for the audio file to finish playing before continuing. Default is false",
                "type": "boolean"
              }
            }
          },
          "stop_playback_bg": {
            "description": "Whether to stop the background audio file.",
            "type": "boolean"
          },
          "user_input": {
            "description": "used to inject text into the users queue as if they input the data themselves.",
            "type": "string"
          },
          "context_switch": {
            "description": "A JSON object containing the context to switch to. Default is not set.",
            "type": "object",
            "properties": {
              "system_prompt": {
                "type": "string",
                "description": "The instructions to send to the agent. Default is not set."
              },
              "consolidate": {
                "type": "boolean",
                "description": "Whether to consolidate the context. Default is false"
              },
              "user_prompt": {
                "type": "string",
                "description": "A string serving as simulated user input for the AI Agent. During a context_switch in the AI's prompt, the user_prompt offers the AI pre-established context or guidance. Default is not set"
              }
            }
          }
        }
      },
      "ai_include_item": {
        "title": "A single item from include",
        "type": "object",
        "properties": {
          "functions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "pass": {
            "type": "string"
          }
        }
      },
      "statement": {
        "title": "SWML statement",
        "oneOf": [
          {
            "title": "Functions call with no arguments",
            "description": "The name of a predefined function. The function is executed with no parameters, its return value is dropped, and only changes to the context are recorded.",
            "type": "string",
            "enum": [
              "answer",
              "hangup",
              "record",
              "record_call",
              "stop_record_call",
              "denoise",
              "stop_denoise",
              "receive_fax",
              "return",
              "stop_tap"
            ]
          },
          {
            "title": "`transfer`",
            "description": "Transfer execution of script to a new section, URL, or RELAY context (context NOT IMPLEMENTED). This is a \"goto\" operation.",
            "type": "object",
            "required": [
              "transfer"
            ],
            "additionalProperties": false,
            "properties": {
              "transfer": {
                "title": "Transfer function parameters",
                "oneOf": [
                  {
                    "$ref": "#/$defs/target"
                  },
                  {
                    "description": "Parameters for the `transfer` function",
                    "type": "object",
                    "required": [
                      "dest"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "dest": {
                        "$ref": "#/$defs/target"
                      },
                      "meta": {
                        "title": "Metadata",
                        "type": "object"
                      },
                      "params": {
                        "title": "Parameters",
                        "type": "object"
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`execute`",
            "description": "Execute a section or URL and return back to current document. This is a \"gosub\" operation.",
            "type": "object",
            "required": [
              "execute"
            ],
            "additionalProperties": false,
            "properties": {
              "execute": {
                "title": "Execute function parameters",
                "oneOf": [
                  {
                    "$ref": "#/$defs/target"
                  },
                  {
                    "description": "Parameters for the `execute` function",
                    "type": "object",
                    "required": [
                      "dest"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "dest": {
                        "$ref": "#/$defs/target"
                      },
                      "meta": {
                        "title": "Metadata",
                        "type": "object"
                      },
                      "params": {
                        "title": "Parameters",
                        "type": "object"
                      },
                      "on_return": {
                        "title": "On-return",
                        "$ref": "#/$defs/block"
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`request`",
            "description": "Runs an HTTP request\nThe following variables are set by this function:\n- `request_result`: `success` | `failed`\n- `request_response_code`: HTTP response code (e.g. `200`)\n- `request_response_body`: unparsed response body\n- `request_response_headers`: object containing the HTTP headers of the response\n- `request_response`: parsed JSON response, if `save_variables` was set",
            "type": "object",
            "required": [
              "request"
            ],
            "additionalProperties": false,
            "properties": {
              "request": {
                "title": "request parameters",
                "description": "Parameters for the `request` function",
                "type": "object",
                "required": [
                  "url",
                  "method"
                ],
                "additionalProperties": false,
                "properties": {
                  "url": {
                    "title": "URL",
                    "type": "string",
                    "pattern": "^https://|^https://"
                  },
                  "method": {
                    "title": "HTTP method",
                    "type": "string",
                    "enum": [
                      "get",
                      "GET",
                      "put",
                      "PUT",
                      "POST",
                      "post",
                      "DELETE",
                      "delete"
                    ]
                  },
                  "headers": {
                    "title": "HTTP headers",
                    "description": "Headers to send with the request.\nThe following headers are authorized:\n- `Content-Type`\n- `Authorization`\n- `Accept`\n- `Range`\n- `X-` headers",
                    "type": "object",
                    "patternProperties": {
                      "^Content-Type$|^Authorization$|^Accept$|^Range$|^[Xx]-[-a-zA-Z0-9_]+$": {
                        "type": "string"
                      }
                    }
                  },
                  "timeout": {
                    "title": "HTTP timeout",
                    "type": "number"
                  },
                  "connect_timeout": {
                    "title": "Connection timeout",
                    "type": "number"
                  },
                  "save_variables": {
                    "title": "Save variables",
                    "type": "boolean"
                  },
                  "body": {
                    "title": "HTTP request body",
                    "oneOf": [
                      {
                        "type": "object"
                      },
                      {
                        "type": "array"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      }
                    ]
                  }
                }
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`switch`",
            "description": "Execute one block of commands based on a variable's value.\nThis is a simplified version of `cond`.",
            "type": "object",
            "required": [
              "switch"
            ],
            "additionalProperties": false,
            "properties": {
              "switch": {
                "title": "Switch function parameters",
                "description": "Parameters for the `switch` function",
                "type": "object",
                "required": [
                  "variable",
                  "case"
                ],
                "additionalProperties": false,
                "properties": {
                  "variable": {
                    "title": "variable",
                    "description": "a call parameter name, subroutine parameter access (starting with `params.`), or variable access",
                    "type": "string",
                    "pattern": "^call[.](headers[.])?[a-zA-Z][-_a-zA-Z0-9]{0,255}$|^(params[.])?[_a-zA-Z][_a-zA-Z0-9]{0,255}(?:[\\[][0-9]+[\\]])?(?:[.][-_a-zA-Z0-9]{1,255}(?:[\\[][0-9]+[\\]])?){0,10}$"
                  },
                  "case": {
                    "title": "case",
                    "description": "values mapped to blocks to execute",
                    "type": "object",
                    "patternProperties": {
                      ".": {
                        "$ref": "#/$defs/block"
                      }
                    }
                  },
                  "default": {
                    "title": "default",
                    "description": "methods to execute if no cases match",
                    "$ref": "#/$defs/block"
                  }
                }
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "if",
            "description": "Execute commands based on a condition.\nThis is a simplified version of `cond`.",
            "type": "object",
            "required": [
              "if"
            ],
            "additionalProperties": false,
            "properties": {
              "if": {
                "title": "If function parameters",
                "description": "Parameters for the `if` function",
                "type": "object",
                "required": [
                  "condition",
                  "then"
                ],
                "additionalProperties": false,
                "properties": {
                  "condition": {
                    "title": "condition",
                    "description": "Expression to evaluate to true/false",
                    "$ref": "#/$defs/expression"
                  },
                  "then": {
                    "title": "then",
                    "description": "Methods to execute on true",
                    "$ref": "#/$defs/block"
                  },
                  "else": {
                    "title": "else",
                    "description": "methods to execute on false",
                    "$ref": "#/$defs/block"
                  }
                }
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`cond`",
            "description": "Branch based on conditions",
            "type": "object",
            "required": [
              "cond"
            ],
            "additionalProperties": false,
            "properties": {
              "cond": {
                "title": "Cond function parameters",
                "description": "Parameters for the `cond` function",
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "title": "Conditional execution",
                      "description": "If the condition expressed by the `when` expression is true,\nthe statements under the `then` section are executed, and\nexecution of the `cond` function is stopped.",
                      "type": "object",
                      "required": [
                        "when",
                        "then"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "when": {
                          "$ref": "#/$defs/expression"
                        },
                        "then": {
                          "$ref": "#/$defs/block"
                        }
                      }
                    },
                    {
                      "title": "Default case",
                      "description": "The statements under the `else` section are executed, and\nexecution of the `cond` function is stopped.\nThis should be used to indicate default treatment, and\nshould be the last branch in the `cond` function call.",
                      "type": "object",
                      "required": [
                        "else"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "else": {
                          "$ref": "#/$defs/block"
                        }
                      }
                    }
                  ]
                }
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`answer`",
            "description": "Answer call and set optional maximum duration",
            "type": "object",
            "required": [
              "answer"
            ],
            "additionalProperties": false,
            "properties": {
              "answer": {
                "oneOf": [
                  {
                    "title": "Maximum duration",
                    "description": "maximum duration in seconds, optional. Can not be less than 7 seconds.",
                    "type": "number",
                    "minimum": 7
                  },
                  {
                    "title": "Answer function parameters",
                    "description": "Parameters for the `answer` function",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "max_duration": {
                        "title": "Maximum duration",
                        "description": "maximum duration in seconds, optional. Can not be less than 7 seconds.",
                        "type": "number",
                        "minimum": 7
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`hangup`",
            "description": "End the call with optional reason",
            "type": "object",
            "required": [
              "hangup"
            ],
            "additionalProperties": false,
            "properties": {
              "hangup": {
                "oneOf": [
                  {
                    "title": "Reason",
                    "description": "hangup reason (hangup, busy, decline)",
                    "type": "string",
                    "enum": [
                      "hangup",
                      "busy",
                      "decline"
                    ]
                  },
                  {
                    "title": "Reason (evaluated)",
                    "description": "hangup reason (evaluated)",
                    "type": "string",
                    "pattern": "^[$%][{].*[}]$"
                  },
                  {
                    "title": "Hangup function parameters",
                    "description": "Parameters for the `hangup` function",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "reason": {
                        "title": "Reason",
                        "oneOf": [
                          {
                            "description": "hangup reason (hangup, busy, decline)",
                            "type": "string",
                            "enum": [
                              "hangup",
                              "busy",
                              "decline"
                            ]
                          },
                          {
                            "description": "hangup reason (evaluated)",
                            "type": "string",
                            "pattern": "^[$%][{].*[}]$"
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`play`",
            "description": "Play file(s), ringtones, speech or silence",
            "type": "object",
            "required": [
              "play"
            ],
            "additionalProperties": false,
            "properties": {
              "play": {
                "oneOf": [
                  {
                    "description": "URL or list of URLs to play",
                    "$ref": "#/$defs/play"
                  },
                  {
                    "description": "Parameters for the `play` function",
                    "type": "object",
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "url": {
                        "title": "url",
                        "description": "string array of URLs to play",
                        "$ref": "#/$defs/play"
                      },
                      "volume": {
                        "$ref": "#/$defs/volume",
                        "description": "gain to apply to played URLs"
                      },
                      "auto_answer": {
                        "title": "Auto Answer",
                        "type": "boolean"
                      },
                      "say_language": {
                        "title": "text to speech language",
                        "$ref": "#/$defs/speech_language"
                      },
                      "say_voice": {
                        "title": "text to speech voice",
                        "type": "string"
                      },
                      "say_gender": {
                        "title": "text to speech gender",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "Parameters for the `play` function",
                    "type": "object",
                    "required": [
                      "urls"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "urls": {
                        "title": "URLs",
                        "description": "string array of URLs to play",
                        "$ref": "#/$defs/play"
                      },
                      "volume": {
                        "$ref": "#/$defs/volume",
                        "description": "gain to apply to played URLs"
                      },
                      "auto_answer": {
                        "title": "Auto Answer",
                        "type": "boolean"
                      },
                      "say_language": {
                        "title": "text to speech language",
                        "$ref": "#/$defs/speech_language"
                      },
                      "say_voice": {
                        "title": "text to speech voice",
                        "type": "string"
                      },
                      "say_gender": {
                        "title": "text to speech gender",
                        "type": "string"
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`prompt`",
            "description": "Play a prompt and wait for digit or speech input. Speech detection is not enabled unless at least one speech parameter is set.\nThe following variables are used, in addition to the parameters:\n- `say_voice`: optional voice to use for `say:` URLs\n- `say_language`: optional language to use for `say:` URLs\n- `say_gender`: optional gender to use for `say:` URLs\nThe following variables are set by this function:\n- `prompt_result`: `failed`, `no_input`, `match_speech`, `match_digits`, `no_match`\n- `prompt_value`: the digits or utterance collected\n- `prompt_digit_terminator`: digit terminator collected, if any\n- `prompt_speech_confidence`: speech confidence measured, if any",
            "type": "object",
            "required": [
              "prompt"
            ],
            "additionalProperties": false,
            "properties": {
              "prompt": {
                "oneOf": [
                  {
                    "description": "URL to play",
                    "$ref": "#/$defs/play"
                  },
                  {
                    "title": "Prompt function parameters",
                    "description": "Parameters for the `prompt` function",
                    "type": "object",
                    "required": [
                      "play"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "play": {
                        "title": "play",
                        "description": "URL or list of URLs to play",
                        "$ref": "#/$defs/play"
                      },
                      "volume": {
                        "$ref": "#/$defs/volume",
                        "description": "gain to apply to played URLs"
                      },
                      "max_digits": {
                        "title": "Maximum number of digits",
                        "type": "integer",
                        "default": 1,
                        "minimum": 1,
                        "description": "number of digits to collect"
                      },
                      "terminators": {
                        "title": "Terminators",
                        "description": "digits that terminate digit collection.",
                        "$ref": "#/$defs/dtmf_digits"
                      },
                      "digit_timeout": {
                        "oneOf": [
                          {
                            "title": "Digit timeout",
                            "type": "number",
                            "default": 5,
                            "exclusiveMinimum": 0,
                            "description": "time in seconds to wait for next digit"
                          },
                          {
                            "title": "Digit timeout as string",
                            "type": "string",
                            "description": "time in seconds to wait for next digit"
                          }
                        ]
                      },
                      "initial_timeout": {
                        "title": "Initial timeout",
                        "type": "number",
                        "default": 5,
                        "exclusiveMinimum": 0,
                        "description": "time in seconds to wait for start of input"
                      },
                      "speech_timeout": {
                        "oneOf": [
                          {
                            "title": "Speech timeout",
                            "type": "number",
                            "exclusiveMinimum": 0,
                            "description": "max time in seconds to wait for speech result"
                          },
                          {
                            "title": "Speech timeout as string",
                            "type": "string",
                            "description": "max time in seconds to wait for speech result"
                          }
                        ]
                      },
                      "speech_end_timeout": {
                        "title": "Speech end timeout",
                        "type": "number",
                        "exclusiveMinimum": 0,
                        "description": "time in seconds to wait for end of speech utterance"
                      },
                      "speech_language": {
                        "title": "Speech language",
                        "description": "language to detect speech in",
                        "$ref": "#/$defs/speech_language"
                      },
                      "speech_hints": {
                        "title": "Speech hints",
                        "type": "array",
                        "description": "expected words to match",
                        "items": {
                          "title": "Individual speech hint",
                          "type": "string"
                        }
                      },
                      "say_language": {
                        "title": "text to speech language",
                        "$ref": "#/$defs/speech_language",
                        "type": "string"
                      },
                      "say_voice": {
                        "title": "text to speech voice",
                        "type": "string"
                      },
                      "say_gender": {
                        "title": "text to speech gender",
                        "type": "string"
                      },
                      "result": {
                        "title": "result",
                        "description": "Set up a switch on return_value by using an object or a cond statement by using an array.",
                        "$ref": "#/$defs/block"
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`record`",
            "description": "Record call audio in foreground. This is recording for voicemails.\nThe following variables are set by this function:\n- `record_call_url`: the URL of the newly created recording\n- `record_call_result`: `success` | `failed`",
            "type": "object",
            "required": [
              "record"
            ],
            "additionalProperties": false,
            "properties": {
              "record": {
                "title": "Record function parameters",
                "description": "Parameters for the `record` function",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "stereo": {
                    "title": "stereo",
                    "description": "Record as a stereo stream",
                    "default": false,
                    "oneOf": [
                      {
                        "type": "boolean",
                        "default": false
                      },
                      {
                        "type": "string",
                        "enum": [
                          "true",
                          "false"
                        ]
                      }
                    ]
                  },
                  "format": {
                    "title": "format",
                    "type": "string",
                    "default": "wav",
                    "description": "Desired output file format",
                    "enum": [
                      "wav",
                      "mp3"
                    ]
                  },
                  "direction": {
                    "title": "direction",
                    "type": "string",
                    "default": "speak",
                    "description": "Direction of audio to record. speak = what party says. listen = what party hears.",
                    "enum": [
                      "speak",
                      "listen",
                      "both"
                    ]
                  },
                  "terminators": {
                    "title": "terminators",
                    "default": "#",
                    "description": "Digits that stop recording.",
                    "$ref": "#/$defs/dtmf_digits"
                  },
                  "beep": {
                    "title": "beep",
                    "description": "Play a beep before recording.",
                    "default": false,
                    "oneOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string",
                        "enum": [
                          "true",
                          "false"
                        ]
                      }
                    ]
                  },
                  "input_sensitivity": {
                    "title": "input sensitivity",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "default": 44,
                    "description": "How sensitive the recording voice activity detector is to background noise. Large value is more sensitive."
                  },
                  "initial_timeout": {
                    "title": "initial timeout",
                    "type": "number",
                    "exclusiveMinimum": 0,
                    "description": "How long to wait for speech to start"
                  },
                  "end_silence_timeout": {
                    "title": "end silence timeout",
                    "type": "number",
                    "exclusiveMinimum": 0,
                    "description": "How much silence in seconds to end recording."
                  }
                }
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`record_call`",
            "description": "Record call in the background.\nThe following variables are set by this function:\n- `record_url`: the URL of the newly created recording\n- `record_result`: `success` | `failed`\n- `record_control_id`: control ID of this recording",
            "type": "object",
            "required": [
              "record_call"
            ],
            "additionalProperties": false,
            "properties": {
              "record_call": {
                "title": "Record-Call function parameters",
                "description": "Parameters for the `record_call` function",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "control_id": {
                    "title": "control id",
                    "type": "string",
                    "description": "Identifier for this recording to use with `stop_call_record`."
                  },
                  "stereo": {
                    "title": "stereo",
                    "type": "boolean",
                    "default": false,
                    "description": "Record as a stereo stream"
                  },
                  "format": {
                    "title": "format",
                    "type": "string",
                    "default": "wav",
                    "description": "Desired output file format",
                    "enum": [
                      "wav",
                      "mp3"
                    ]
                  },
                  "direction": {
                    "title": "direction",
                    "type": "string",
                    "default": "both",
                    "description": "Direction of audio to record. `speak` = what party says, `hear` = what party hears, `both` = what party hears and says.",
                    "enum": [
                      "speak",
                      "listen",
                      "both"
                    ]
                  },
                  "terminators": {
                    "title": "terminators",
                    "description": "Digits that stop recording.",
                    "$ref": "#/$defs/dtmf_digits"
                  },
                  "beep": {
                    "title": "beep",
                    "type": "boolean",
                    "default": false,
                    "description": "Play a beep before recording."
                  },
                  "input_sensitivity": {
                    "title": "input sensitivity",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "default": 44,
                    "description": "How sensitive the recording voice activity detector is to background noise. Large value is more sensitive."
                  },
                  "initial_timeout": {
                    "title": "initial timeout",
                    "type": "number",
                    "default": 0,
                    "description": "How long to wait for speech to start"
                  },
                  "end_silence_timeout": {
                    "title": "end silence timeout",
                    "type": "number",
                    "default": 0,
                    "description": "How much silence in seconds to end recording."
                  }
                }
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`stop_record_call`",
            "description": "Stop an active background recording\nThe following variables are used, in addition to the parameters:\n- `record_control_id`: control ID of last recording started\nThe following variables are set by this function:\n- `stop_record_call_result`: `success` | `failed`",
            "type": "object",
            "required": [
              "stop_record_call"
            ],
            "additionalProperties": false,
            "properties": {
              "stop_record_call": {
                "oneOf": [
                  {
                    "title": "control id",
                    "type": "string",
                    "description": "Identifier for this recording to use with `stop_call_record`."
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "control_id": {
                        "title": "control id",
                        "type": "string",
                        "description": "Identifier for this recording to use with `stop_call_record`."
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`connect`",
            "description": "Dial SIP URI or phone number\nThe following variables are set by this function:\n- `connect_result`: `connected` | `failed`\n- `connect_failed_reason`: detailed reason for failure",
            "type": "object",
            "required": [
              "connect"
            ],
            "additionalProperties": false,
            "properties": {
              "connect": {
                "oneOf": [
                  {
                    "title": "Serial Parallel",
                    "type": "object",
                    "required": [
                      "serial_parallel"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "serial_parallel": {
                        "title": "Serial",
                        "type": "array",
                        "description": "Array of arrays. Inner arrays contain destinations to dial simultaneously. Outer array attempts each parallel group in order.",
                        "items": {
                          "title": "Parallel",
                          "type": "array",
                          "description": "Inner arrays contain destinations to dial simultaneously.",
                          "items": {
                            "$ref": "#/$defs/connect_device"
                          }
                        }
                      },
                      "from": {
                        "title": "from",
                        "type": "string",
                        "description": "Caller ID number"
                      },
                      "headers": {
                        "$ref": "#/$defs/connect_sip_headers"
                      },
                      "codecs": {
                        "$ref": "#/$defs/sip_codec_list",
                        "description": "Comma-separated string of codecs to offer. Has no effect on calls to phone numbers."
                      },
                      "webrtc_media": {
                        "title": "webrtc media",
                        "type": "boolean",
                        "description": "If true, WebRTC media is offered to the SIP endpoint. Has no effect on calls to phone numbers."
                      },
                      "timeout": {
                        "title": "timeout",
                        "type": "number",
                        "minimum": 0
                      },
                      "session_timeout": {
                        "title": "session timeout",
                        "type": "integer",
                        "minimum": 0,
                        "description": "If >0, SIP Session-Expires header in INVITE is set to this value. Has no effect on calls to phone numbers."
                      },
                      "ringback": {
                        "title": "ringback",
                        "description": "Array of play URIs to play as ringback tone",
                        "$ref": "#/$defs/play"
                      },
                      "max_duration": {
                        "title": "maximum duration",
                        "type": "number"
                      },
                      "answer_on_bridge": {
                        "title": "answer on bridge",
                        "type": "boolean"
                      },
                      "call_state_url": {
                        "title": "call_state_url",
                        "type": "string",
                        "description": "webhook url (http(s)) to which send call state change notifications"
                      },
                      "call_state_events": {
                        "title": "call_state_events",
                        "description": "an array of call state event names to be notified about. Allowed event names: `created`, `ringing`, `answered`, `ended`. Defaults to `[\"ended\"]`",
                        "type": "array",
                        "default": [
                          "ended"
                        ],
                        "items": {
                          "type": "string",
                          "enum": [
                            "created",
                            "ringing",
                            "answered",
                            "ended"
                          ]
                        }
                      }
                    }
                  },
                  {
                    "title": "Serial",
                    "type": "object",
                    "required": [
                      "serial"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "serial": {
                        "title": "Serial",
                        "type": "array",
                        "description": "Array of destinations to dial in order.",
                        "items": {
                          "$ref": "#/$defs/connect_device"
                        }
                      },
                      "from": {
                        "title": "from",
                        "type": "string",
                        "description": "Caller ID number"
                      },
                      "headers": {
                        "$ref": "#/$defs/connect_sip_headers"
                      },
                      "codecs": {
                        "$ref": "#/$defs/sip_codec_list",
                        "description": "Comma-separated string of codecs to offer. Has no effect on calls to phone numbers."
                      },
                      "webrtc_media": {
                        "title": "webrtc media",
                        "type": "boolean",
                        "description": "If true, WebRTC media is offered to the SIP endpoint. Has no effect on calls to phone numbers."
                      },
                      "timeout": {
                        "title": "timeout",
                        "type": "number",
                        "minimum": 0
                      },
                      "session_timeout": {
                        "title": "session timeout",
                        "type": "integer",
                        "minimum": 0,
                        "description": "If >0, SIP Session-Expires header in INVITE is set to this value. Has no effect on calls to phone numbers."
                      },
                      "ringback": {
                        "title": "ringback",
                        "description": "Array of play URIs to play as ringback tone",
                        "$ref": "#/$defs/play"
                      },
                      "max_duration": {
                        "title": "maximum duration",
                        "type": "number"
                      },
                      "answer_on_bridge": {
                        "title": "answer on bridge",
                        "type": "boolean"
                      },
                      "call_state_url": {
                        "title": "call_state_url",
                        "description": "webhook url (http(s)) to which send call state change notifications",
                        "type": "string"
                      },
                      "call_state_events": {
                        "title": "call_state_events",
                        "description": "an array of call state event names to be notified about. Allowed event names: `created`, `ringing`, `answered`, `ended`. Defaults to `[\"ended\"]`",
                        "type": "array",
                        "default": [
                          "ended"
                        ],
                        "items": {
                          "type": "string",
                          "enum": [
                            "created",
                            "ringing",
                            "answered",
                            "ended"
                          ]
                        }
                      },
                      "result": {
                        "title": "result",
                        "description": "Set up a switch on return_value by using an object or a cond statement by using an array.",
                        "$ref": "#/$defs/block"
                      }
                    }
                  },
                  {
                    "title": "Parallel",
                    "type": "object",
                    "required": [
                      "parallel"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "parallel": {
                        "title": "Parallel",
                        "type": "array",
                        "description": "Array of destinations to dial simultaneously.",
                        "items": {
                          "$ref": "#/$defs/connect_device"
                        }
                      },
                      "from": {
                        "title": "from",
                        "type": "string",
                        "description": "Caller ID number"
                      },
                      "headers": {
                        "$ref": "#/$defs/connect_sip_headers"
                      },
                      "codecs": {
                        "$ref": "#/$defs/sip_codec_list",
                        "description": "Comma-separated string of codecs to offer. Has no effect on calls to phone numbers."
                      },
                      "webrtc_media": {
                        "title": "webrtc media",
                        "type": "boolean",
                        "description": "If true, WebRTC media is offered to the SIP endpoint. Has no effect on calls to phone numbers."
                      },
                      "timeout": {
                        "title": "timeout",
                        "type": "number",
                        "minimum": 0
                      },
                      "session_timeout": {
                        "title": "session timeout",
                        "type": "integer",
                        "minimum": 0,
                        "description": "If >0, SIP Session-Expires header in INVITE is set to this value. Has no effect on calls to phone numbers."
                      },
                      "ringback": {
                        "title": "ringback",
                        "description": "Array of play URIs to play as ringback tone",
                        "$ref": "#/$defs/play"
                      },
                      "max_duration": {
                        "title": "maximum duration",
                        "type": "number"
                      },
                      "answer_on_bridge": {
                        "title": "answer on bridge",
                        "type": "boolean"
                      },
                      "call_state_url": {
                        "title": "call_state_url",
                        "description": "webhook url (http(s)) to which send call state change notifications",
                        "type": "string"
                      },
                      "call_state_events": {
                        "title": "call_state_events",
                        "description": "an array of call state event names to be notified about. Allowed event names: `created`, `ringing`, `answered`, `ended`. Defaults to `[\"ended\"]`",
                        "type": "array",
                        "default": [
                          "ended"
                        ],
                        "items": {
                          "type": "string",
                          "enum": [
                            "created",
                            "ringing",
                            "answered",
                            "ended"
                          ]
                        }
                      },
                      "result": {
                        "title": "result",
                        "description": "Set up a switch on return_value by using an object or a cond statement by using an array.",
                        "$ref": "#/$defs/block"
                      }
                    }
                  },
                  {
                    "title": "Single",
                    "type": "object",
                    "required": [
                      "to"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "to": {
                        "title": "To",
                        "type": "string",
                        "description": "SIP URI or phone number"
                      },
                      "from": {
                        "title": "from",
                        "type": "string",
                        "description": "Caller ID number"
                      },
                      "headers": {
                        "$ref": "#/$defs/connect_sip_headers"
                      },
                      "codecs": {
                        "$ref": "#/$defs/sip_codec_list",
                        "description": "Comma-separated string of codecs to offer. Has no effect on calls to phone numbers."
                      },
                      "webrtc_media": {
                        "title": "webrtc media",
                        "type": "boolean",
                        "description": "If true, WebRTC media is offered to the SIP endpoint. Has no effect on calls to phone numbers."
                      },
                      "timeout": {
                        "title": "timeout",
                        "type": "number",
                        "minimum": 0
                      },
                      "session_timeout": {
                        "title": "session tiemout",
                        "type": "integer",
                        "minimum": 0,
                        "description": "If >0, SIP Session-Expires header in INVITE is set to this value. Has no effect on calls to phone numbers."
                      },
                      "ringback": {
                        "title": "ringback",
                        "description": "Array of play URIs to play as ringback tone",
                        "$ref": "#/$defs/play"
                      },
                      "max_duration": {
                        "title": "maximum duration",
                        "type": "number"
                      },
                      "answer_on_bridge": {
                        "title": "answer on bridge",
                        "type": "boolean"
                      },
                      "call_state_url": {
                        "title": "call_state_url",
                        "description": "webhook url (http(s)) to which send call state change notifications",
                        "type": "string"
                      },
                      "call_state_events": {
                        "title": "call_state_events",
                        "description": "an array of call state event names to be notified about. Allowed event names: `created`, `ringing`, `answered`, `ended`. Defaults to `[\"ended\"]`",
                        "type": "array",
                        "default": [
                          "ended"
                        ],
                        "items": {
                          "type": "string",
                          "enum": [
                            "created",
                            "ringing",
                            "answered",
                            "ended"
                          ]
                        }
                      },
                      "result": {
                        "title": "result",
                        "description": "Set up a switch on return_value by using an object or a cond statement by using an array.",
                        "$ref": "#/$defs/block"
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`join_room`",
            "description": "Join a RELAY room\nThe following variables are set by this function:\n- `join_room_result`: `joined` | `failed`",
            "type": "object",
            "required": [
              "join_room"
            ],
            "additionalProperties": false,
            "properties": {
              "join_room": {
                "oneOf": [
                  {
                    "title": "room name",
                    "type": "string",
                    "description": "name of room"
                  },
                  {
                    "title": "join room function parameters",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "title": "room name",
                        "type": "string",
                        "description": "name of room"
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`denoise`",
            "description": "Start noise reduction\nThe following variables are set by this function:\n- `denoise_result`: `on` | `failed`",
            "type": "object",
            "required": [
              "denoise"
            ],
            "additionalProperties": false,
            "properties": {
              "denoise": {
                "title": "denois parameters",
                "type": "object",
                "additionalProperties": false,
                "properties": {}
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`stop_denoise`",
            "description": "Stop noise reduction\nThe following variables are set by this function:\n- `denoise_result`: `off`",
            "type": "object",
            "required": [
              "stop_denoise"
            ],
            "additionalProperties": false,
            "properties": {
              "stop_denoise": {
                "title": "stop denoise parameters",
                "type": "object",
                "additionalProperties": false,
                "properties": {}
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`receive_fax`",
            "description": "Receive a fax being delivered to this call\nThe following variables are set by this function:\n- `receive_fax_document`: URL of received document\n- `receive_fax_identity`: identity of this fax station\n- `receive_fax_remote_identity`: identity of the sending fax station\n- `receive_fax_pages`: number of pages received\n- `receive_fax_result_code`: fax status code\n- `receive_fax_result_text`: description of fax status code\n- `receive_fax_result`: `success` | `failed`",
            "type": "object",
            "required": [
              "receive_fax"
            ],
            "additionalProperties": false,
            "properties": {
              "receive_fax": {
                "title": "receive fax parameters",
                "type": "object",
                "additionalProperties": false,
                "properties": {}
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`send_fax`",
            "description": "Send a fax\nThe following variables are set by this function:\n- `send_fax_document`: URL of sent document\n- `send_fax_identity`: identity of this fax station\n- `send_fax_remote_identity`: identity of the receiving fax station\n- `send_fax_pages`: number of pages sent\n- `send_fax_result_code`: fax status code\n- `send_fax_result_text`: description of fax status code\n- `send_fax_result`: `success` | `failed`",
            "type": "object",
            "required": [
              "send_fax"
            ],
            "additionalProperties": false,
            "properties": {
              "send_fax": {
                "oneOf": [
                  {
                    "title": "send fax parameters",
                    "type": "object",
                    "required": [
                      "document"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "document": {
                        "title": "document",
                        "type": "string",
                        "description": "URL of PDF document to fax"
                      },
                      "header_info": {
                        "title": "header information",
                        "type": "string",
                        "description": "text to add to fax header"
                      },
                      "identity": {
                        "title": "identity",
                        "type": "string",
                        "description": "station identity to report"
                      }
                    }
                  },
                  {
                    "title": "PDF URL",
                    "type": "string",
                    "description": "URL of PDF document to fax"
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`sip_refer`",
            "description": "Send SIP REFER to SIP call\nThe following variables are set by this function:\n- `sip_refer_to`: The SIP URI the recipient is to INVITE\n- `sip_refer_result`: Overall SIP REFER result\n- `sip_refer_response_code`: recipient response to the REFER request\n- `sip_refer_to_response_code`: INVITE response to the recipient",
            "type": "object",
            "required": [
              "sip_refer"
            ],
            "additionalProperties": false,
            "properties": {
              "sip_refer": {
                "oneOf": [
                  {
                    "title": "To URI",
                    "type": "string",
                    "description": "SIP URI to REFER to"
                  },
                  {
                    "title": "sip refer parameters",
                    "type": "object",
                    "required": [
                      "to_uri"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "to_uri": {
                        "title": "To URI",
                        "type": "string",
                        "description": "SIP URI to REFER to"
                      },
                      "result": {
                        "title": "result",
                        "description": "Set up a switch on return_value by using an object or a cond statement by using an array.",
                        "$ref": "#/$defs/block"
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`set`",
            "description": "Set script variables. Specifically, variables are created in the context associated with the enclosing `sections`.\nAny variable can be set by this method.",
            "type": "object",
            "required": [
              "set"
            ],
            "additionalProperties": false,
            "properties": {
              "set": {
                "title": "Set function parameters",
                "description": "An object maping variable names to values.",
                "type": "object",
                "additionalProperties": false,
                "patternProperties": {
                  "(?:vars[.])?[_a-zA-Z][_a-zA-Z0-9]{0,255}": true
                }
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`eval`",
            "description": "Set script variables with expression result\nAny variable can be set by this method.",
            "type": "object",
            "required": [
              "eval"
            ],
            "additionalProperties": false,
            "properties": {
              "eval": {
                "title": "Eval function parameters",
                "description": "An object maping variable names to expressions.",
                "type": "object",
                "additionalProperties": false,
                "patternProperties": {
                  "^(?:vars[.])?[_a-zA-Z][_a-zA-Z0-9]{0,255}$": {
                    "$ref": "#/$defs/expression"
                  }
                }
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`unset`",
            "description": "Unset script variables.\nAny variable can be unset by this method.",
            "type": "object",
            "required": [
              "unset"
            ],
            "additionalProperties": false,
            "properties": {
              "unset": {
                "oneOf": [
                  {
                    "title": "Unset one variable",
                    "description": "One variable name to unset.",
                    "type": "string",
                    "pattern": "^[_a-zA-Z][_a-zA-Z0-9]{0,255}$"
                  },
                  {
                    "title": "Unset multiple variables",
                    "description": "List of variable names to unset.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[_a-zA-Z][_a-zA-Z0-9]{0,255}$"
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`tap`",
            "description": "Start background call tap. Media is streamed over Websocket or RTP to customer controlled URI.\nThe following variables are set by this function:\n- `tap_uri`: the destination URI of the newly started tap\n- `tap_result`: `success` | `failed`\n- `tap_control_id`: control ID of this tap\n- `tap_rtp_src_addr`: if RTP, source address of the tap stream\n- `tap_rtp_src_port`: if RTP, source port of the tap stream\n- `tap_ptime`: packetization time of the tap stream\n- `tap_codec`: codec in the tap stream\n- `tap_rate`: sample rate in the tap stream",
            "type": "object",
            "required": [
              "tap"
            ],
            "additionalProperties": false,
            "properties": {
              "tap": {
                "oneOf": [
                  {
                    "title": "Stream URL",
                    "type": "string",
                    "description": "destination of tap media stream. rtp://IP:port, ws://example.com, or wss://example.com",
                    "pattern": "^rtp://|^ws://|^wss://"
                  },
                  {
                    "title": "tap function parameters",
                    "type": "object",
                    "required": [
                      "uri"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "control_id": {
                        "title": "control id",
                        "type": "string",
                        "description": "identifier for this tap to use with stop_tap"
                      },
                      "uri": {
                        "title": "uri",
                        "type": "string",
                        "description": "destination of tap media stream. rtp://IP:port, ws://example.com, or wss://example.com",
                        "pattern": "^rtp://|^ws://|^wss://"
                      },
                      "direction": {
                        "title": "direction",
                        "type": "string",
                        "default": "both",
                        "description": "Direction of audio to tap. speak = what party says. listen = what party hears. both = what party hears and says.",
                        "enum": [
                          "speak",
                          "listen",
                          "both"
                        ]
                      },
                      "codec": {
                        "title": "codec",
                        "type": "string",
                        "default": "PCMU",
                        "description": "PCMU or PCMA.",
                        "enum": [
                          "PCMU",
                          "PCMA",
                          "pcma",
                          "pcmu"
                        ]
                      },
                      "rtp_ptime": {
                        "title": "RTP ptime",
                        "type": "integer",
                        "minimum": 10,
                        "default": 20,
                        "maximum": 120,
                        "multipleOf": 10,
                        "description": "If rtp:// URI, this optional parameter can set the packetization time of the media."
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`stop_tap`",
            "description": "Stop an active tap stream\nThe following variables are used, in addition to the parameters:\n- `tap_control_id`: control ID of last tap stream started\nThe following variables are set by this function:\n- `stop_tap_result`: `success` | `failed`",
            "type": "object",
            "required": [
              "stop_tap"
            ],
            "additionalProperties": false,
            "properties": {
              "stop_tap": {
                "oneOf": [
                  {
                    "title": "control id",
                    "type": "string",
                    "description": "ID of the tap to stop. If not set, the last tap started will be stopped."
                  },
                  {
                    "title": "stop tap function parameters",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "control_id": {
                        "title": "control id",
                        "type": "string",
                        "description": "ID of the tap to stop. If not set, the last tap started will be stopped."
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`send_digits`",
            "description": "Send digit presses.\nThe following variables are set by this function:\n- `send_digits_result`: `success` | `failed`",
            "type": "object",
            "required": [
              "send_digits"
            ],
            "additionalProperties": false,
            "properties": {
              "send_digits": {
                "oneOf": [
                  {
                    "title": "digits",
                    "description": "The digits to send. Valid values are `0123456789*#ABCDWw`. `W` is a 1 second delay. `w` is a 500 ms delay.",
                    "$ref": "#/$defs/sendable_dtmf_digits"
                  },
                  {
                    "title": "send digits function parameters",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "digits": {
                        "title": "digits",
                        "description": "The digits to send. Valid values are `0123456789*#ABCDWw`. `W` is a 1 second delay. `w` is a 500 ms delay.",
                        "$ref": "#/$defs/sendable_dtmf_digits"
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`send_sms`",
            "description": "Send SMS\nThe following variables are set by this function:\n- `send_sms_result`: `success` | `failed`\n- `send_sms_response_code`: string, representing a numerical HTTP response code",
            "type": "object",
            "required": [
              "send_sms"
            ],
            "additionalProperties": false,
            "properties": {
              "send_sms": {
                "oneOf": [
                  {
                    "title": "send sms function parameters (with media)",
                    "type": "object",
                    "required": [
                      "to_number",
                      "from_number",
                      "media"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "body": {
                        "title": "body",
                        "description": "The content to be sent as SMS",
                        "type": "string"
                      },
                      "to_number": {
                        "title": "to number",
                        "description": "The number of the recipient",
                        "type": "string",
                        "minLength": 2
                      },
                      "from_number": {
                        "title": "from number",
                        "description": "The number of the sender",
                        "type": "string",
                        "minLength": 2
                      },
                      "region": {
                        "title": "region",
                        "description": "Region",
                        "type": "string"
                      },
                      "media": {
                        "title": "media",
                        "description": "Media",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "tags": {
                        "title": "tags",
                        "description": "Tags",
                        "type": "array",
                        "items": {
                          "title": "individual tag",
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "title": "send sms function parameters (with body)",
                    "type": "object",
                    "required": [
                      "to_number",
                      "from_number",
                      "body"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "body": {
                        "title": "body",
                        "description": "The content to be sent as SMS",
                        "type": "string"
                      },
                      "to_number": {
                        "title": "to number",
                        "description": "The number of the recipient",
                        "type": "string",
                        "minLength": 2
                      },
                      "from_number": {
                        "title": "from number",
                        "description": "The number of the sender",
                        "type": "string",
                        "minLength": 2
                      },
                      "region": {
                        "title": "region",
                        "description": "Region",
                        "type": "string"
                      },
                      "tags": {
                        "title": "tags",
                        "description": "Tags",
                        "type": "array",
                        "items": {
                          "title": "individual tag",
                          "type": "string"
                        }
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`ai`",
            "description": "Handle call through Artifical Intelligence (AI).\nThe following variables are set by this function:\n- `ai_result`: `success` | `failed`",
            "type": "object",
            "required": [
              "ai"
            ],
            "additionalProperties": false,
            "properties": {
              "ai": {
                "oneOf": [
                  {
                    "title": "AI parameters",
                    "type": "object",
                    "required": [
                      "prompt"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "prompt": {
                        "title": "prompt",
                        "description": "Context used to start the conversation. Also know as assistant prompt.\nExample:\n```\nYour name is Franklin and you are taking orders for Franklin's Pizza.\nThe menu is as follows:\n  small pizza: $13.99\n  med pizza: $15.99\n  large pizza: $19.99\n  toppings: $1.50\n  bottle of coke: $1.99\navailable toppings: pepperoni, sausage, mushrooms, green olives, green peppers.\nEverything on the menu is available to order. You are never out of anything, you have an endless supply of everything.\nDo not let the user order anything that is not on the menu above.\nCollect the user's name and number and confirm the number of items before completing the order.\nStart by introducing yourself and ask if the user wants to place an order.\n```",
                        "$ref": "#/$defs/ai_system"
                      },
                      "post_prompt": {
                        "title": "POST prompt",
                        "description": "Context used to close the conversation. Use it to analyze the conversation and do one final thing after the call ends, like \"summarize the conversation\" or \"extract my pizza order as json\".\nExample:\n```\nPlease summarize my order as valid anonymous json object with three main keys: \"contact_info\", \"pizzas\", and \"drinks\".\nUnder the \"contact_info\" key, there are two values: \"name\" and \"number\", with the name and number of the customer.\nUnder the \"pizzas\" key, there is an array. Each element in the array represents a different pizza and contains three key-value pairs:\n\"size\" (with a value of \"large\" , \"medium\" or \"small\"),\n\"price\" (with a value of the price), and \"toppings\"\n(with a value of an array containing the valid toppings \"pepperoni\", \"sausage\", \"mushrooms\", \"green olives\", \"green peppers\" ).\nUnder the \"drinks\" key, there is an array with one element for each drink.\nThis element contains two key-value pairs:\n\"type\" (with a value of valid drink \"coke\") and \"price\" (with a value of the price for the drink).\nFill in any unknown data with null.\nDo not use any words or code at all outside the json.\nIf you have not taken an order just send 'null'.\n```",
                        "$ref": "#/$defs/ai_system"
                      },
                      "post_prompt_url": {
                        "title": "POST prompt URL",
                        "description": "Called on completion, receives a POST with JSON content:\n- `appName`: the `name` provided as parameter, the static string `swml app`\n- `callLog`: an array describing the conversation; each item is a\n    `{role,content}` pair; this includes:\n    - `system` role: provides context: date and time, the `promt.text` and `post_prompt.text`, remote party id name and number, call direction\n    - `assistant` role: for responses from the AI chat\n    - `user` role: caller's response, coming from the ASR\n- `systemEnd`: an optional string containing the response, i.e. the value of `choices[0].message.content` in [AI Chat response](https://platform.openai.com/docs/guides/chat/response-format)\nSupports `https://user:pass@example.com` format.",
                        "type": "string"
                      },
                      "post_prompt_auth_user": {
                        "title": "POST prompt Authentication user",
                        "description": "Username for post_prompt_url. If provided in `postPrompURL`, the value in `post_prompt_url` takes precedence.",
                        "type": "string"
                      },
                      "post_prompt_auth_password": {
                        "title": "POST prompt Authentication password",
                        "description": "Password for post_prompt_url. If provided in `post_promp_url`, the value in `post_prompt_url` takes precedence."
                      },
                      "voice": {
                        "title": "voice",
                        "description": "The voice used in the Text-To-Speech (TTS) subsystem, i.e. the voice of the AI. Defaults to `en-US-Neural2-J`.",
                        "type": "string"
                      },
                      "hints": {
                        "title": "hints",
                        "description": "Hints for the Automated Speech Recognition system.\nExample: [ \"pizza\", \"pepperoni\", \"sausage\", \"mushroom\", \"green olive\", \"green pepper\", \"small\", \"medium\", \"large\", \"coke\" ]",
                        "type": "array",
                        "items": {
                          "title": "hint",
                          "description": "Some expected utterance from the person talking to the AI",
                          "type": "string"
                        }
                      },
                      "languages": {
                        "title": "languages",
                        "description": "Supported languages for spoken text.",
                        "type": "array",
                        "items": {
                          "title": "language",
                          "type": "object",
                          "required": [
                            "name",
                            "code",
                            "voice"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "title": "name",
                              "description": "A textual description of the language, for example `English`.",
                              "type": "string"
                            },
                            "code": {
                              "$ref": "#/$defs/speech_language"
                            },
                            "voice": {
                              "title": "voice",
                              "description": "A voice model for this language, for example `en-US-Neural2-F` or `fr-FR-Neural2-E`.",
                              "type": "string",
                              "default": "en-US-Neural2-J"
                            }
                          }
                        }
                      },
                      "pronounce": {
                        "title": "pronounce",
                        "description": "Set of expressions to speel out phonetically to make it sound better in Text-To-Speech (TTS)\nExample:\n```\n[\n  {\n    \"replace\": \"voip\",\n    \"with\": \"voyp\",\n    \"ignore_case\": true\n  },\n  {\n    \"replace\": \"SIP\",\n    \"with\": \"sip\",\n    \"ignore_case\": true\n  }\n]\n```",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "title": "pronounce item",
                          "description": "Replacement for TTS",
                          "required": [
                            "replace",
                            "with"
                          ],
                          "properties": {
                            "replace": {
                              "type": "string",
                              "title": "pronounce replace",
                              "description": "Text to replace"
                            },
                            "with": {
                              "type": "string",
                              "title": "pronounce replace with",
                              "description": "Replacement text"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "title": "pronounce ignore case",
                              "description": "Ignore case when matching the `replace` string"
                            }
                          }
                        }
                      },
                      "params": {
                        "title": "params",
                        "description": "Additional parameters",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "direction": {
                            "title": "direction",
                            "type": "string",
                            "enum": [
                              "inbound",
                              "outbound"
                            ]
                          },
                          "wait_for_user": {
                            "title": "wait for user",
                            "type": "boolean",
                            "default": false
                          },
                          "end_of_speech_timeout": {
                            "title": "End of speech timeout",
                            "type": "integer",
                            "minimum": 250,
                            "maximum": 10000
                          },
                          "attention_timeout": {
                            "title": "Attention timeout",
                            "type": "integer",
                            "oneOf": [
                              {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 0
                              },
                              {
                                "type": "integer",
                                "minimum": 10000,
                                "maximum": 600000
                              }
                            ]
                          },
                          "background_file": {
                            "title": "Background file",
                            "type": "string"
                          },
                          "background_file_loops": {
                            "title": "Background file loops",
                            "type": "number",
                            "minimum": 1
                          },
                          "background_file_volume": {
                            "title": "Background file volume",
                            "type": "number",
                            "minimum": -50,
                            "maximum": 50
                          },
                          "local_tz": {
                            "title": "Local Timezone",
                            "type": "string"
                          },
                          "conversation_id": {
                            "description": "Unique identifier for this conversation to be used to retain info from call to call",
                            "type": "string"
                          },
                          "save_conversation": {
                            "description": "Send a summary of the conversation after the call ends",
                            "type": "boolean"
                          },
                          "inactivity_timeout": {
                            "description": "Amount of time, in ms, to wait before exiting the app due to inactivity. Allowed values 10,000 - 3600000. optional. Default is 600000",
                            "type": "number",
                            "minimum": 10000,
                            "maximum": 3600000
                          },
                          "ai_volume": {
                            "type": "number",
                            "description": "Adjust the volume of the AI. Allowes volumes from -50-50. Default is 0",
                            "minimum": -50,
                            "maximum": 50
                          },
                          "swaig_allow_swml": {
                            "type": "boolean",
                            "description": "Allos SWAIG functions to return SWML to be executed by the call. Optional. Default is true."
                          },
                          "conscience": {
                            "type": "boolean",
                            "description": "Strictly enforce prompts. Optional. Default is true"
                          },
                          "digit_timeout": {
                            "title": "digit timeout",
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "exclusiveMaximum": 30000,
                            "default": 3000
                          },
                          "digit_terminators": {
                            "title": "digit terminators",
                            "type": "string"
                          },
                          "energy_level": {
                            "title": "energy level",
                            "description": "in decibels",
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100
                          }
                        }
                      },
                      "SWAIG": {
                        "title": "SWAIG functions",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/$defs/swaig_functions"
                            }
                          },
                          {
                            "type": "object",
                            "$ref": "#/$defs/swaig_functions"
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          },
          {
            "title": "`return`",
            "description": "Return from execution. Ends script / call if executed in `main` section.\nParameters obey variable substitution.\nThe following variables are set by this function:\n- `return_value`: parameters after substitution.",
            "type": "object",
            "required": [
              "return"
            ],
            "additionalProperties": false,
            "properties": {
              "return": true,
              ":l": {
                "type": "integer",
                "description": "line number in the source code"
              },
              ":c": {
                "type": "integer",
                "description": "column number in the source code"
              },
              ":i": {
                "type": "integer",
                "description": "index number in the source code"
              }
            }
          }
        ]
      }
    }
  }